

RICE_sicily_intervention_cb = {
	group = event
	icon = RICE_sicily_intervention
	war_name = "RICE_sicily_intervention_cb_war_name"
	war_name_base = "INVASION_WAR_NAME_BASE"
	cb_name = "RICE_sicily_intervention_cb_name"

	interface_priority = 8
	attacker_wargoal_percentage = 0.8
	
	should_show_war_goal_subview = yes
	mutually_exclusive_titles = { always = yes }

	target_title_tier = duchy
	target_de_jure_regions_above = yes
	ignore_effect = change_title_holder

	allowed_for_character = { always = no }
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				any_in_de_jure_hierarchy = {
					tier = tier_county
					holder = {
						target_is_same_character_or_above = scope:defender
					}
				}
			}
		}
	}

	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		scope:attacker = {
			add_to_list = invasion_beneficiary_candidates
			every_courtier = {
				limit = {
					is_physically_able = yes
					is_adult = yes
					culture = { has_cultural_pillar = heritage_turkic }
				}
				add_to_list = invasion_beneficiary_candidates
			}
			ordered_in_list = {
				list = invasion_beneficiary_candidates
				order_by = {
					value = 1
					if = {
						limit = { can_be_combatant_based_on_gender_trigger = { ARMY_OWNER = scope:attacker } }
						add = 20
					}
					if = {
						limit = { this = scope:attacker }
						multiply = 0.5
					}
					if = {
						limit = { is_heir_of = scope:attacker }
						add = -10
					}
					if = {
						limit = { is_spouse_of = scope:attacker }
						add = -10
					}
					if = {
						limit = { has_no_particular_noble_roots_trigger = yes }
						add = 10
					}
				}
				save_scope_as = invasion_beneficiary
			}
		}

		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}

		show_as_tooltip = {
			random_in_list = {
				list = target_titles
				random_in_de_jure_hierarchy = {
					limit = {
						tier = tier_county
						# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
						#exists = holder
						holder = {
							OR = {
								this = scope:defender
								target_is_liege_or_above = scope:defender
							}
						}
					}
					RICE_sicily_cb_stronghold_effect = yes
				}	
			}
		}


		hidden_effect = {
			scope:attacker = {
				send_interface_message = {
					type = event_raid_good
					title = border_raid_message_title
					show_as_tooltip = {
						random_in_list = {
							list = target_titles
							random_in_de_jure_hierarchy = {
								limit = {
									tier = tier_county
									# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
									#exists = holder
									holder = {
										OR = {
											this = scope:defender
											target_is_liege_or_above = scope:defender
										}
									}
								}
								RICE_sicily_cb_stronghold_effect = yes
							}	
						}
					}
				}
			}
			scope:defender = {
				send_interface_message = {
					type = event_raid_bad
					title = border_raid_message_title
					random_in_list = {
						list = target_titles
						random_in_de_jure_hierarchy = {
							limit = {
								tier = tier_county
								# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
								#exists = holder
								holder = {
									OR = {
										this = scope:defender
										target_is_liege_or_above = scope:defender
									}
								}
							}
							RICE_sicily_cb_stronghold_effect = yes
						}	
					}
				}
			}
		}

		every_in_list = {
			list = target_titles
			custom = RICE_sicily_intervention_beneficiary
			custom_tooltip = RICE_sicily_intervention_title
			every_in_de_jure_hierarchy = {
				limit = {
					tier = tier_county
					# Current holder must be a (sub)vassal of the defender (no poaching titles from 3rd parties!)
					#exists = holder
					holder = {
						OR = {
							this = scope:defender
							target_is_liege_or_above = scope:defender
						}
					}
				}
				change_title_holder = {
					holder = scope:invasion_beneficiary
					change = scope:change
					take_baronies = yes
				}
			}
			scope:invasion_beneficiary = {
				if = {
					limit = { is_independent_ruler = no }
					becomes_independent = {
						change = scope:change
					}
				}
			}
		}
		show_as_tooltip = {
			every_in_list = {
				list = target_titles
				every_in_de_jure_hierarchy = {
					limit = { holder.top_liege = scope:defender }
					change_title_holder = {
						holder = scope:attacker
						change = scope:change
					}
				}
			}
		}

		resolve_title_and_vassal_change = scope:change
		
		scope:defender = {
			add_character_modifier = {
				modifier = RICE_sicily_intervention_instability
				years = 20
			}
		}
		
		hidden_effect = {
			scope:invasion_beneficiary = {
				add_gold = 300
				every_sub_realm_county = {
					change_county_control = 100
				}
				every_sub_realm_barony = {
					title_province = {
						refill_garrison = yes
						refill_levy = yes
					}
				}
				if = {
					limit = {
						exists = capital_province
					}
					RICE_sicily_expedition_free_troops_effect = yes
				}
			}
		}

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = minor_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		struggle:RICE_sicily_struggle ?= {
			activate_struggle_catalyst = {
				catalyst = catalyst_RICE_sicily_expedition_victory
				character = scope:attacker
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes
		scope:attacker = { fp1_remember_recent_conquest_victory_effect = yes }
	}

	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = minor_prestige_value
				multiply = -1.0
			}
			stress_impact = {
 				ambitious = medium_stress_impact_gain
 				arrogant = medium_stress_impact_gain
 			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:attacker # Not important as the scales are identical
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		scope:defender = {
			stress_impact = {
 				arrogant = medium_stress_impact_gain
 			}
		}

		struggle:RICE_sicily_struggle ?= {
			activate_struggle_catalyst = {
				catalyst = catalyst_RICE_sicily_expedition_defeat
				character = scope:attacker
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 2
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Allies on both sides get full prestige value for helping in the war, based on their war participation.
		modify_allies_of_participants_fame_values = {
			WINNER = scope:defender
			FAME_BASE = minor_prestige_value
			IS_RELIGIOUS_WAR = no
			WINNER_ALLY_FAME_SCALE = 0
			LOSER_ALLY_FAME_SCALE = 1
		}

		struggle:RICE_sicily_struggle ?= {
			activate_struggle_catalyst = {
				catalyst = catalyst_RICE_sicily_expedition_defeat
				character = scope:attacker
			}
		}

		add_truce_attacker_defeat_effect = yes
		scope:attacker = { save_temporary_scope_as = loser }
		on_lost_aggression_war_discontent_loss = yes

	}

	on_victory_desc = {
		desc = RICE_sicily_intervention_cb_victory_desc
	}
	on_white_peace_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_white_peace_desc_defender
			}
			desc = county_conquest_cb_white_peace_desc
		}
	}
	on_defeat_desc = {
		first_valid = {
			triggered_desc = {
				trigger = { scope:defender = { is_local_player = yes } }
				desc = county_conquest_cb_defeat_desc_defender
			}
			triggered_desc = {
				trigger = {
					scope:attacker = {
						is_local_player = yes
						has_targeting_faction = yes
					}
				}
				desc = county_conquest_cb_defeat_desc_attacker
			}
			desc = county_conquest_cb_defeat_desc
		}
	}
	on_invalidated_desc = msg_invalidate_war_title

	transfer_behavior = transfer

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit
	attacker_allies_inherit = no
	defender_allies_inherit = no
}

RICE_sicily_frontier_raid_cb = {
	group = struggle
	icon = RICE_sicily_frontier_raid

	combine_into_one = yes
	should_show_war_goal_subview = yes
	allow_hostages = no
	mutually_exclusive_titles = { always = yes }
	interface_priority = 110
	
	attacker_score_from_occupation_scale = 150
	attacker_score_from_battles_scale = 150
	defender_score_from_battles_scale = 150

	allowed_for_character = {
		# Attacker must be Involved in Struggle during correct phase OR near Sicily
		# RICE_lands_near_sicily_region
		capital_province = {
			OR = {
				geographical_region = RICE_lands_near_sicily_region
				geographical_region = custom_sicily
			}
		}
		# any_character_struggle = {
		# 	involvement = involved
		# 	has_struggle_phase_parameter = RICE_sicily_unlocks_foothold_casus_belli
		# }
	}

	allowed_against_character = {
		#Realm must have at least some land in Sicily
		any_realm_county = {
			title_province = { geographical_region = custom_sicily }
		}
		# Defender must be Involved, Interloper, or Uninvolved in Struggle during correct phase
		# OR = {
		# 	any_character_struggle = {
		# 		involvement = involved
		# 		has_struggle_phase_parameter = RICE_sicily_unlocks_foothold_casus_belli
		# 	}
		# 	any_character_struggle = {
		# 		involvement = interloper
		# 		has_struggle_phase_parameter = RICE_sicily_unlocks_foothold_casus_belli
		# 	}
		# 	any_character_struggle = {
		# 		involvement = involved
		# 		has_struggle_phase_parameter = RICE_sicily_unlocks_foothold_casus_belli
		# 	}
		# }
		# Defender must be bordering your realm.
		# OR = {
		# 	character_is_land_realm_neighbor = scope:attacker
		# 	AND = {
		# 		exists = scope:attacker.liege
		# 		character_is_land_realm_neighbor = scope:attacker.liege
		# 	}
		# }
	}

	target_titles = neighbor_land # border
	target_title_tier = county # county
	target_de_jure_regions_above = no
	ignore_effect = change_title_holder

	ai_score_mult = { value = RICE_sicily_foothold_cb_ai_targeting_value } # RICE_sicily_frontier_raid_ai_targeting_value

	valid_to_start = {
		exists = scope:target
		scope:target = {
			title_province = { geographical_region = custom_sicily }
		}
		NOT = {
			scope:target.title_province = { has_province_modifier = recently_looted_modifier }
		}
	}

	should_invalidate = {
		NOT = {
			any_in_list = {
				list = target_titles
				holder = { target_is_same_character_or_above = scope:defender }
			}
		}
	}

	on_invalidated_desc = msg_county_conquest_war_invalidated_message
	
	on_invalidated = {}

	cost = {
		piety = {
			value = 0
			if = {
				limit = {
					scope:defender.faith = scope:attacker.faith
				}
				add = {
					value = minor_piety_value
					desc = CB_SAME_FAITH_COST
				}
			}

			multiply = common_cb_piety_cost_multiplier
		}
		prestige = {
			value = minor_prestige_value
			if = {
				limit = {
					NOT = { scope:defender.faith = scope:attacker.faith }
				}
				add = {
					value = minor_prestige_value
					desc = CB_COST_DIFFERENT_FAITH
				}
			}
			multiply = common_cb_prestige_cost_multiplier
		}
	}

	on_declaration = {
		on_declared_war = yes
		struggle:RICE_sicily_struggle ?= {
			activate_struggle_catalyst = {
				catalyst = catalyst_RICE_sicily_frontier_raid
				character = scope:attacker
			}
		}
	}

	on_victory_desc = {
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
			}
			desc = border_raid_cb_desc_victory_attacker
		}
		triggered_desc = {
			trigger = {
				scope:defender = { is_local_player = yes }
			}
			desc = border_raid_cb_desc_victory_defender
		}
	}

	on_victory = {
		# Legitimacy
		add_legitimacy_attacker_victory_effect = yes
		
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:attacker = { accolade_attacker_war_end_glory_gain_low_effect = yes }
		
		every_in_list = {
			list = target_titles
			save_scope_as = raid_county
			# Set raided province modifier
			title_province = {
				add_province_modifier = {
					modifier = recently_looted_modifier
					years = 5
				}
			}
			show_as_tooltip = {
				every_in_list = {
					list = target_titles
					RICE_sicily_border_raid_cb_damage_effect = yes
				}
			}
			# Find province for building destruction
			ordered_county_province = {
				order_by = num_buildings
				random = {
					chance = 25
					modifier = { factor = destroy_building_soldier_multiplier_value } # chance increases with more soldiers
					modifier = { add = destroy_building_development_multiplier_value } # chance increases with development
					custom_tooltip = destroy_random_building_tt
					destroy_random_building_variable_effect = yes
				}
			}
		}

		hidden_effect = {
			scope:attacker = {
				send_interface_message = {
					type = event_raid_good
					title = border_raid_message_title
					show_as_tooltip = {
						every_in_list = {
							list = target_titles
							RICE_sicily_border_raid_cb_damage_effect = yes
						}
					}
				}
			}
			scope:defender = {
				send_interface_message = {
					type = event_raid_bad
					title = border_raid_message_title
					every_in_list = {
						list = target_titles
						RICE_sicily_border_raid_cb_damage_effect = yes
					}
				}
			}
		}

		show_as_tooltip = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = yes
			}
			every_in_list = {
				list = target_titles
				change_title_holder = {
					holder = scope:attacker
					change = scope:change
				}
			}
			resolve_title_and_vassal_change = scope:change
		}

		# Prestige Progress for the Attacker
		every_in_list = {
			list = target_titles
			scope:attacker = {
				add_prestige_experience = miniscule_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Break alliances now out of diplo range
		if = {
			limit = {
				scope:attacker = {
					any_ally = {
						NOT = { in_diplomatic_range = scope:attacker }
					}
				}
			}
			scope:attacker = {
				every_ally = {
					limit = {
						NOT = { in_diplomatic_range = scope:attacker }
					}
					break_alliance = scope:attacker
				}
			}
		}

		# Truce
		add_truce_attacker_victory_effect = yes
	}

	on_white_peace_desc = {
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
			}
			desc = border_raid_cb_desc_white_peace_attacker
		}
		triggered_desc = {
			trigger = {
				scope:defender = { is_local_player = yes }
			}
			desc = border_raid_cb_desc_white_peace_defender
		}
	}

	on_white_peace = {
		# Prestige loss for the attacker
		scope:attacker = {
			add_prestige = {
				value = miniscule_prestige_value
				multiply = -1.0
			}
			stress_impact = {
				ambitious = medium_stress_impact_gain
				arrogant = medium_stress_impact_gain
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		scope:defender = {
			stress_impact = {
				arrogant = medium_stress_impact_gain
			}
		}

		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		triggered_desc = {
			trigger = {
				scope:attacker = { is_local_player = yes }
			}
			desc = border_raid_cb_desc_defeat_attacker
		}
		triggered_desc = {
			trigger = {
				scope:defender = { is_local_player = yes }
			}
			desc = border_raid_cb_desc_defeat_defender
		}
	}

	on_defeat = {
		# Legitimacy
		add_legitimacy_attacker_defeat_effect = yes
		
		#EP2 accolade glory gain for winning against higher ranked enemy
		scope:defender = { accolade_defender_war_end_glory_gain_low_effect = yes }

		# Prestige loss for the attacker
		scope:attacker = {
			pay_short_term_gold_reparations_effect = {
				GOLD_VALUE = 1
			}
			add_prestige = {
				value = medium_prestige_value
				multiply = -1.0
			}
		}

		# Prestige for Defender
		scope:defender = {
			add_prestige_war_defender_effect = {
				PRESTIGE_VALUE = medium_prestige_value
			}
		}

		# Prestige for the attacker's war allies
		add_from_contribution_attackers = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		# Prestige for the defender's war allies
		add_from_contribution_defenders = {
			prestige = minor_prestige_value
			opinion = {
				modifier = contributed_in_war
			}
		}

		add_truce_attacker_defeat_effect = yes

		scope:attacker = {
			save_temporary_scope_as = loser
		}

		on_lost_aggression_war_discontent_loss = yes
	}

	transfer_behavior = transfer

	on_primary_attacker_death = invalidate
	on_primary_defender_death = inherit

	attacker_allies_inherit = no
	defender_allies_inherit = no

	war_name = "RICE_sicily_frontier_raid_CB_NAME"
	war_name_base = "RICE_sicily_frontier_raid_CB_NAME_BASE"
	cb_name = "RICE_sicily_frontier_raid_CB_NAME"

	interface_priority = 79

	use_de_jure_wargoal_only = yes

	# The war will last 2 years at most
	defender_ticking_warscore_delay = { months = 3 }
	defender_ticking_warscore = 0.15

	attacker_wargoal_percentage = 1
	attacker_ticking_warscore = 1

	max_defender_score_from_occupation = 100
	max_attacker_score_from_occupation = 1

	ticking_war_score_targets_entire_realm = no
}