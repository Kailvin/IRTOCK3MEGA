#new_official_imperial_faith

### A New Imperial Faith
# Each Empire can have an offical faith
# This official faith is easier to spread within the Empire
# The official faith can be switched should the Emperor change their faith
new_official_imperial_faith_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_imperial_faith.dds"
	}
	decision_group_type = religious

	desc = new_official_imperial_faith_decision_desc
	
	ai_check_interval = 36
	
	is_shown = {
		NOT = { has_dlc_feature = roads_to_power }
		is_landed_or_landless_administrative = yes
		# Obviously only Emperors can declare their faith to be the official faith of the Empire
		primary_title.tier >= tier_empire
		
		OR = {
			# Either the Empire has no official faith...
			NOT = { exists = primary_title.var:official_imperial_faith }
			# ... or you don't have it
			NOT = { faith = primary_title.var:official_imperial_faith }
		}
	}
	
	is_valid = {
		custom_tooltip = {
  		text = change_official_faith_localization
 		NOT = { has_character_flag = change_official_faith }
		}
		piety_level >= 3
		
		# Maybe make it more difficult if it's unreformed?
		custom_description = {
			text = faith_is_reformed
			subject = root
			faith = { NOT = { has_doctrine_parameter = unreformed } }
		}
		culture = {
			has_innovation = innovation_imperial_faith
		}
	}
	
	cost = {
		piety = 4000
	}
	
	effect = {
		save_scope_as = emperor
		faith = { save_scope_as = new_faith }
		primary_title = { save_scope_as = empire }
		if = {
			limit = { exists = primary_title.var:official_imperial_faith }
			primary_title.var:official_imperial_faith = { save_scope_as = old_faith }
		}
		
		show_as_tooltip = { new_official_imperial_faith_effect = yes }
		
		trigger_event = TFE_major_decisions.0001
		
		# every_player = {
			# # limit = { NOT = { this = root } }
			# trigger_event = TFE_major_decisions.0002
		# }
		hidden_effect = {
			add_character_flag = {
				flag = change_official_faith
				years = 20
			}
		}
	}
	
	ai_potential = {
		#always = yes
	}
	
	ai_will_do = {
		base = 100
	}
}

new_official_imperial_faith_decision_ep3 = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_imperial_faith.dds"
	}
	decision_group_type = religious

	desc = new_official_imperial_faith_decision_ep3_desc
	
	ai_check_interval = 36
	
	is_shown = {
		faith ?= top_liege.primary_title.state_faith
		has_dlc_feature = roads_to_power
		is_landed_or_landless_administrative = yes
		# Obviously only Emperors can declare their faith to be the official faith of the Empire
		primary_title.tier >= tier_empire
		OR = {
			# Either the Empire has no official faith...
			NOT = { exists = primary_title.var:official_imperial_faith }
			# ... or you don't have it
			NOT = { faith = primary_title.var:official_imperial_faith }
		}
	}
	
	is_valid = {
		custom_tooltip = {
  		text = change_official_faith_localization
 		NOT = { has_character_flag = change_official_faith }
		}
		piety_level >= 3
		
		# Maybe make it more difficult if it's unreformed?
		custom_description = {
			text = faith_is_reformed
			subject = root
			faith = { NOT = { has_doctrine_parameter = unreformed } }
		}
		culture = {
			has_innovation = innovation_imperial_faith
		}
	}
	
	cost = {
		piety = 4000
	}
	
	effect = {
		save_scope_as = emperor
		faith = { save_scope_as = new_faith }
		primary_title = { save_scope_as = empire }
		if = {
			limit = { exists = primary_title.var:official_imperial_faith }
			primary_title.var:official_imperial_faith = { save_scope_as = old_faith }
		}
		
		show_as_tooltip = { new_official_imperial_faith_effect_ep3 = yes }
		
		trigger_event = TFE_major_decisions_ep3.0001
		
		# every_player = {
			# # limit = { NOT = { this = root } }
			# trigger_event = TFE_major_decisions.0002
		# }
		hidden_effect = {
			add_character_flag = {
				flag = change_official_faith
				years = 20
			}
		}
	}
	
	ai_potential = {
		#always = yes
	}
	
	ai_will_do = {
		base = 100
	}
}

### Reopen the Catechetical School of Alexandria
# Swaps tenet_alexandrian_catechism for tenet_alexandrian_catechism_reformed
reopen_catechetical_school_alexandria = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_realm.dds"
	}
	decision_group_type = religious

	desc = reopen_catechetical_school_alexandria_desc
	
	ai_check_interval = 36
	
	is_shown = {
		is_landed_or_landless_administrative = yes
		primary_title.tier >= tier_kingdom
		
		# Obviously your faith needs to have tenet_alexandrian_catechism
		faith = { has_doctrine = tenet_alexandrian_catechism }
		
		NOT = {  #Can only do it once. Also used in the tenet selection, in case you wanna create a new faith with the tenet
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_reopen_catechetical_school_alexandria
			}
		}
	}
	
	is_valid = {
		# piety_level >= 3
		
		# # Control all your holy sites
		# num_realm_holy_sites_faithful_holders = {
			# CHARACTER = root
			# COUNT = 4
		# }
		
		# title:b_alexandria = { title_province = { has_building = holy_site_cathedral_01 } }
	}
	
	cost = {
		piety = 1000
	}
	
	effect = {
		show_as_tooltip = { reopen_catechetical_school_alexandria_effect = { MAIN_FAITH = root.faith } }
		
		trigger_event = TFE_major_decisions.0010
		
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:flag_reopen_catechetical_school_alexandria
			}
		}
	}
	
	ai_potential = {
		always = yes
	}
	
	ai_will_do = {
		base = 100
	}
}






### Temporarily Restore The Dam Ma'rib ###
# Gives modifiers to all modifiers in the duchy temporarily #
restore_the_mardib_dam = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_ctesiphon.dds"
	}

	desc = restore_the_mardib_dam_desc
	cooldown = { years = 10 }
	ai_check_interval = 36
	selection_tooltip = restore_the_mardib_dam_tooltip

	is_shown = {
		is_landed_or_landless_administrative = yes
		primary_title.tier >= tier_duchy
		any_sub_realm_barony = {
			title_province = { has_building = marib_dam }
		}
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:rebuild_the_marib_dam
			}
		}
	}
	
	is_valid = {
		prestige_level >= 2
		is_independent_ruler = yes
		any_sub_realm_barony = {
			title_province = { has_building = marib_dam }
		}
	}
	
	cost = {
		gold = 150
	}
	
	effect = {
		custom_tooltip = restore_the_mardib_dam_tooltip_1
		custom_tooltip = restore_the_mardib_dam_tooltip_2
		custom_tooltip = restore_the_mardib_dam_tooltip_3
		trigger_event = TFE_flavour_events.0003
	}
	
	ai_potential = {
		always = yes
	}
	
	ai_will_do = {
		base = 20
	}
}

### Rebuild The Dam Ma'rib ###
# Gives modifiers to all modifiers in the duchy #
rebuild_the_mardib_dam = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_ctesiphon.dds"
	}
	decision_group_type = major

	desc = rebuild_the_mardib_dam_desc
	ai_check_interval = 100
	selection_tooltip = rebuild_the_mardib_dam_tooltip
	
	is_shown = {
		is_landed_or_landless_administrative = yes
		primary_title.tier >= tier_duchy
		any_sub_realm_barony = {
			title_province = { has_building = marib_dam }
		}
		NOT = {  #Can only do it once.
			is_target_in_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:rebuild_the_marib_dam
			}
		}
	}
	
	is_valid = {
		prestige_level >= 3
		OR = {
			stewardship >= 10
			learning >= 10
		}
		is_independent_ruler = yes
		any_sub_realm_barony = {
			title_province = { has_building = marib_dam }
		}
	}
	
	cost = {
		gold = 1000
	}
	
	effect = {
		custom_tooltip = rebuild_the_mardib_dam_tooltip_1
		custom_tooltip = rebuild_the_mardib_dam_tooltip_2
		trigger_event = TFE_flavour_events.0004
		hidden_effect = {
			add_to_global_variable_list = {
				name = unavailable_unique_decisions
				target = flag:rebuild_the_marib_dam
			}
		}
	}
	
	ai_potential = {
		always = yes
	}
	
	ai_will_do = {
		base = 50
	}
}

# Disable because it's been superceded by the Fall of Rome struggle
# tfe_theodoric_rome_decision = {
# 	picture = "gfx/interface/illustrations/decisions/decision_allegiance.dds"
# 	desc = tfe_theodoric_rome_decision_desc
# 	selection_tooltip = tfe_theodoric_rome_decision_tooltip
# 	major = yes
# 	ai_check_interval = 12

# 	is_shown = {
# 		#Can only do it once.
# 		NOT = {
# 			is_target_in_global_variable_list = {
# 				name = unavailable_unique_decisions
# 				target = flag:tfe_theodoric_rome_decision
# 			}
# 		}
# 		culture = {
# 			OR = {
# 				NOR = {
# 					this = culture:roman
# 					this = culture:greek
# 					any_parent_culture_or_above = {
# 						this = culture:roman
# 					}
# 					any_parent_culture_or_above = {
# 						this = culture:greek
# 					}
# 				}
# 				#Specifically include Goths, because Theodoric should obviously be able to take this
# 				this = culture:gothic
# 				any_parent_culture = {
# 					this = culture:gothic
# 				}
# 			}
# 		}
# 		current_year <= 550

# 		#50% of your realm is populated by Romans
# 		any_realm_county = {
# 			percent >= 0.5
# 			culture = culture:roman
# 		}
# 		#You control 50% of Italia
# 		any_county_in_region = {
# 			region = custom_italia
# 			percent >= 0.5
# 			holder.top_liege = root
# 		}
# 	}

# 	is_valid = {
# 		prestige_level >= 3
# 		capital_county.title_province = {
# 			geographical_region = custom_italia
# 		}
# 	}

# 	is_valid_showing_failures_only = {
# 		is_available_adult = yes
# 	}
	
# 	effect = {
# 		hidden_effect = {
# 			add_to_global_variable_list = {
# 				name = unavailable_unique_decisions
# 				target = flag:tfe_theodoric_rome_decision
# 			}
# 		}
# 		show_as_tooltip = {
# 			random_list = {
# 				1 = {
# 					show_chance = no desc = tfe_theodoric_rome_decision_if_hybridise
# 					culture:roman = {
# 						change_cultural_acceptance = {
# 							target = root.culture
# 							value = 40
# 							desc = tfe_hybridised_barbarians_and_romans
# 						}
# 					}
# 					every_realm_county = {
# 						custom = tfe_every_roman_realm_county_custom
# 						limit = {
# 							culture = culture:roman
# 						}
# 						add_county_modifier = {
# 							modifier = tfe_hybridised_barbarians_and_romans
# 							years = 50
# 						}
# 					}
# 				}
# 				1 = {
# 					show_chance = no desc = tfe_theodoric_rome_decision_if_segregate
# 					dynasty = {
# 						add_dynasty_modifier = {
# 							modifier = tfe_segregated_barbarians_and_romans
# 							years = 100
# 						}
# 					}
# 				}
# 			}
# 		}
		
# 		hidden_effect = {
# 			if = { 
# 				limit = { OR = { scope:tfe_theodoric_rome_unite = yes is_ai = yes } }
# 				culture:roman = {
# 					change_cultural_acceptance = {
# 						target = root.culture
# 						value = 40
# 						desc = tfe_hybridised_barbarians_and_romans
# 					}
# 				}
# 				every_realm_county = {
# 					custom = tfe_every_roman_realm_county_custom
# 					limit = {
# 						culture = culture:roman
# 					}
# 					add_county_modifier = {
# 						modifier = tfe_hybridised_barbarians_and_romans
# 						years = 50
# 					}
# 				}
# 			}
# 			else_if = {
# 				limit = { scope:tfe_theodoric_rome_segregate = yes }
# 				dynasty = {
# 					add_dynasty_modifier = {
# 						modifier = tfe_segregated_barbarians_and_romans
# 						years = 100
# 					}
# 				}
# 			}
# 		}
# 	}
# 	widget = {
# 		gui = "decision_view_widget_theodoric_rome"
# 		controller = decision_option_list_controller
# 		decision_has_second_step = yes
# 		decision_custom_widget_container = "custom_widgets_container_step_two"
# 		decision_to_second_step_button = "TFE_THEODORIC_ROME_SECOND_STEP_BTN"

# 		### General
# 		item = {
# 			value = tfe_theodoric_rome_unite
# 			is_valid = {
# 				always = yes
# 			}
# 			localization = tfe_theodoric_rome_unite_name
# 			current_description = tfe_theodoric_rome_unite_desc
# 			icon = "gfx/interface/illustrations/struggle_decisions_buttons/decision_allegiance.dds"
# 			ai_chance = { value = 0 }
# 		}
# 		item = {
# 			value = tfe_theodoric_rome_segregate
# 			is_valid = {
# 				always = yes
# 			}
# 			localization = tfe_theodoric_rome_segregate_name
# 			current_description = tfe_theodoric_rome_segregate_desc
# 			icon = "gfx/interface/illustrations/struggle_decisions_buttons/decision_roman_knight.dds"
# 			ai_chance = { value = 0 }
# 		}
# 	}

# 	ai_potential = {
# 		always = yes
# 	}

# 	ai_will_do = {
# 		base = 100
# 	}
	
# 	cost = { 
# 		prestige = 1000
# 	}
# }