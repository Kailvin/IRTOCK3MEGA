# spawn invader, before story
spawn_borjigin_invader_effect = {
	random_county_in_region = {
		region = special_$INVADER_DYNN$_conquest_region_start
		title_province = { save_scope_as = invader_spawn_location }
	}

	##### ancestors in a straight line from Menen Dutum to Yesugei
	create_character = {
		template = ancestor_borjigin_character_template
		name = menen_borjigin_character_template_name
		age = 261
		dynasty = generate
		location = scope:invader_spawn_location
		save_scope_as = menen_borjigin
		after_creation = { death = natural }
	}
	create_character = {
		template = ancestor_borjigin_character_template
		name = khachi_borjigin_character_template_name
		age = 236
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:menen_borjigin
		save_scope_as = khachi_borjigin
		after_creation = { death = natural }
	}
	create_character = {
		template = ancestor_borjigin_character_template
		name = khaidu_borjigin_character_template_name
		age = 206
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:khachi_borjigin
		save_scope_as = khaidu_borjigin
		after_creation = { death = natural }
	}
	create_character = {
		template = ancestor_borjigin_character_template
		name = bashikhur_borjigin_character_template_name
		age = 176
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:khaidu_borjigin
		save_scope_as = bashikhur_borjigin
		after_creation = { death = natural }
	}
	create_character = {
		template = ancestor_borjigin_character_template
		name = tumbinai_borjigin_character_template_name
		age = 146
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:bashikhur_borjigin
		save_scope_as = tumbinai_borjigin
		after_creation = { death = natural }
	}
	create_character = {
		template = ancestor_borjigin_character_template
		name = khabul_borjigin_character_template_name
		age = 116
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:tumbinai_borjigin
		save_scope_as = khabul_borjigin
		after_creation = { death = natural }
	}
	create_character = {
		template = ancestor_borjigin_character_template
		name = bartan_borjigin_character_template_name
		age = 96
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:khabul_borjigin
		save_scope_as = bartan_borjigin
		after_creation = { death = natural }
	}
	create_character = {
		template = yesugei_borjigin_character_template
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:bartan_borjigin
		save_scope_as = yesugei_borjigin
		after_creation = { death = natural }
	}
	
	### INVADER Temüjin
	create_character = {
		template = temujin_borjigin_character_template
		dynasty = inherit
		location = scope:invader_spawn_location
		father = scope:yesugei_borjigin
		save_scope_as = invader
		after_creation = {}
	}

	scope:invader = {
		add_gold = 7500
		add_prestige = 30000
		add_piety = 300
		
		dynasty = {
			set_dynasty_name = hi_dynn_borjigin
			set_coa = title:e_mongol_empire

			add_dynasty_prestige_level = 5
			add_dynasty_prestige = 20250
		
			$INVADER_DYNN$_add_dynasty_perks_effect = yes
		}
		house = {
			set_house_name = hi_dynn_borjigin_house_borjigin
		}
	}

	every_player = {
		trigger_event = $INVADER_DYNN$_invasion.1001 # Notification: Start of invasion
	}
}

borjigin_add_dynasty_perks_effect = {
	add_dynasty_perk = warfare_legacy_1
	add_dynasty_perk = warfare_legacy_2
	add_dynasty_perk = warfare_legacy_3
	add_dynasty_perk = warfare_legacy_4
	add_dynasty_perk = warfare_legacy_5
	add_dynasty_perk = glory_legacy_1
	if = {
		limit = { has_ep1_dlc_trigger = yes } # Royal Court
		add_dynasty_perk = ep1_culture_legacy_1
		add_dynasty_perk = ep1_culture_legacy_2
		add_dynasty_perk = ep1_culture_legacy_3
	}
	else = {
		add_dynasty_perk = erudition_legacy_1
		add_dynasty_perk = erudition_legacy_2
		add_dynasty_perk = erudition_legacy_3
	}
}

borjigin_maintenance_effect = {
	apply_invader_modifiers_effect = {
		INVADER_DYNN = $INVADER_DYNN$
	}
	give_invader_land_effect = {
		INVADER_DYNN = $INVADER_DYNN$
		INVADER_CHAR = $INVADER_CHAR$
		STARTING_TIER = $STARTING_TIER$
	}
	spawn_$INVADER_DYNN$_family_effect = {
		INVADER_CHAR = $INVADER_CHAR$
	}
	spawn_invader_servants_effect = {
		INVADER_CHAR = $INVADER_CHAR$
	}
	title:e_mongol_empire = { copy_title_history = title:e_mongolia }
	form_the_invader_title_effect = {
		INVADER_DYNN = $INVADER_DYNN$
		INVADER_CHAR = $INVADER_CHAR$
		INVADER_TITLE = $INVADER_TITLE$
		LANDLESS_YES_NO = $LANDLESS_YES_NO$
	}
	### succession law
	if = {
		limit = {
			can_have_single_heir_succession_law_trigger = yes
			NOT = { has_realm_law = single_heir_succession_law }
		}
		add_realm_law_skip_effects = single_heir_succession_law
	}
	else = {
		if = {
			limit = {
				NOT = { has_realm_law = high_partition_succession_law }
			}
			add_realm_law_skip_effects = high_partition_succession_law
		}
	}
	# as a last resort, try to move away from confederate
	if = {
		limit = { has_realm_law = confederate_partition_succession_law }
		add_realm_law_skip_effects = partition_succession_law
	}
}

### populating the life of the invader character
spawn_borjigin_family_effect = {
	##### other ancestors
	### earlier dynasty offshoots
	## father's brothers (2) & spouses
	# 1
	create_character = {
		template = ancestor_borjigin_character_template
		name = negun_borjigin_character_template_name
		age = { 65 75 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father
		save_scope_as = negun_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	create_character = {
		age = { 30 40 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:negun_borjigin
		}
	}
	# 2
	create_character = {
		template = ancestor_borjigin_character_template
		name = daritai_borjigin_character_template_name
		age = { 65 75 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father
		save_scope_as = daritai_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	create_character = {
		age = { 30 40 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:daritai_borjigin
		}
	}
	## grandfather's brothers (2)
	# 1
	create_character = {
		template = ancestor_borjigin_character_template
		name = okin_borjigin_character_template_name
		age = { 90 100 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father.father
		save_scope_as = negun_borjigin
		after_creation = { death = natural }
	}
	# 2
	create_character = {
		template = ancestor_borjigin_character_template
		name = mongler_borjigin_character_template_name
		age = { 90 100 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father.father
		save_scope_as = mongler_borjigin
		after_creation = { death = natural }
	}
	# son of 2, famous wrestler
	create_character = {
		template = ancestor_borjigin_character_template
		name = buri_borjigin_character_template_name
		age = { 65 75 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = scope:mongler_borjigin
		save_scope_as = buri_borjigin
		after_creation = { death = natural } # murdered
	}
	## grand-grandfather's brother; TIMUR branch?!
	# 1
	create_character = {
		template = ancestor_borjigin_character_template
		name = qachuli_borjigin_character_template_name
		age = { 110 130 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father.father.father.father
		save_scope_as = qachuli_borjigin
		after_creation = { death = natural }
	}
	# son
	create_character = {
		template = ancestor_borjigin_character_template
		name = erdemchu_borjigin_character_template_name
		age = { 90 110 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = scope:qachuli_borjigin
		save_scope_as = erdemchu_borjigin
		after_creation = { death = natural }
	}
	# son's son
	create_character = {
		template = ancestor_borjigin_character_template
		name = suqu_borjigin_character_template_name
		age = { 65 75 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = scope:erdemchu_borjigin
		save_scope_as = suqu_borjigin
		after_creation = { death = natural }
	}
	# Qarachar
	create_character = {
		template = ancestor_borjigin_character_template
		name = qarachar_borjigin_character_template_name
		age = 40
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = scope:suqu_borjigin
		save_scope_as = qarachar_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	# Qarachar's spouse
	create_character = {
		age = { 25 30 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = qarachar_borjigin_spouse
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:qarachar_borjigin
		}
	}
	# Qarachar's son
	create_character = {
		template = ancestor_borjigin_character_template
		name = ichil_borjigin_character_template_name
		age = 14
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:qarachar_borjigin_spouse
		father = scope:qarachar_borjigin
		save_scope_as = ichil_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	# Ichil's spouse
	create_character = {
		age = { 13 15 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			create_betrothal = scope:ichil_borjigin
		}
	}
	### five brothers, 1 sister of Temüjin + spouses
	# 1
	create_character = {
		template = ancestor_borjigin_character_template
		name = belgutei_borjigin_character_template_name
		age = 45
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father
		save_scope_as = belgutei_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	create_character = {
		age = { 35 45 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:belgutei_borjigin
		}
	}
	# 2
	create_character = {
		template = ancestor_borjigin_character_template
		name = behter_borjigin_character_template_name
		age = { 35 45 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father
		save_scope_as = behter_borjigin
		after_creation = {
			death = {
				death_reason = death_murder
				killer = $INVADER_CHAR$
			}
		}
	}
	# 3
	create_character = {
		template = ancestor_borjigin_character_template
		name = qasar_borjigin_character_template_name
		age = { 19 20 }
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father
		save_scope_as = qasar_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	create_character = {
		age = { 35 45 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:qasar_borjigin
		}
	}
	# 4
	create_character = {
		template = ancestor_borjigin_character_template
		name = hachiun_borjigin_character_template_name
		age = 40
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father
		save_scope_as = hachiun_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	create_character = {
		age = { 30 40 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:hachiun_borjigin
		}
	}
	# 5
	create_character = {
		template = ancestor_borjigin_character_template
		name = temuge_borjigin_character_template_name
		age = 38
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father
		save_scope_as = temuge_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	create_character = {
		age = { 28 38 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:temuge_borjigin
		}
	}
	# 6
	create_character = {
		template = ancestor_borjigin_character_template
		name = temulen_borjigin_character_template_name
		gender = female
		age = 35
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$.father
		save_scope_as = temulen_borjigin
		after_creation = { disease_immunity_short_effect = yes }
	}
	create_character = {
		age = { 28 38 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = male
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry_matrilineal = scope:temulen_borjigin
		}
	}
	### Temüjin's family
	# spouse Börte
	create_character = {
		template = borte_onggirat_character_template
		dynasty = generate
		gender = female
		employer = $INVADER_CHAR$
		save_scope_as = borte_onggirat
		after_creation = {
			marry = $INVADER_CHAR$
			disease_immunity_long_effect = yes
			dynasty = {
				set_dynasty_name = hi_dynn_onggirat
			}
			house = {
				set_house_name = hi_dynn_onggirat
			}
		}
	}
	# three concubines
	create_character = {
		age = { 20 24 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = concubine_1
		after_creation = {
			disease_immunity_short_effect = yes
			if = {
				limit = {
					NOT = { has_trait = lustful }
					number_of_personality_traits < 4
				}
				add_trait = lustful
			}
		}
	}
	create_character = {
		age = { 20 24 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = concubine_2
		after_creation = {
			disease_immunity_short_effect = yes
			if = {
				limit = {
					NOT = { has_trait = lustful }
					number_of_personality_traits < 4
				}
				add_trait = lustful
			}
		}
	}
	create_character = {
		age = { 20 24 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = concubine_3
		after_creation = {
			disease_immunity_short_effect = yes
			if = {
				limit = {
					NOT = { has_trait = lustful }
					number_of_personality_traits < 4
				}
				add_trait = lustful
			}
		}
	}
	$INVADER_CHAR$ = {
		make_concubine = scope:concubine_1
		make_concubine = scope:concubine_2
		make_concubine = scope:concubine_3
	}

	### seven children
	# Jochi
	create_character = {
		template = jochi_borjigin_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:borte_onggirat
		father = $INVADER_CHAR$
		save_scope_as = jochi_borjigin
		after_creation = {
			disease_immunity_long_effect = yes
		}
	}
	# Jochi's spouse
	create_character = {
		age = { 17 19 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			marry = scope:jochi_borjigin
		}
	}
	# Jochi: three concubines
	create_character = {
		age = { 18 22 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = concubine_1
		after_creation = {
			disease_immunity_short_effect = yes
			if = {
				limit = {
					NOT = { has_trait = lustful }
					number_of_personality_traits < 4
				}
				add_trait = lustful
			}
		}
	}
	create_character = {
		age = { 18 22 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = concubine_2
		after_creation = {
			disease_immunity_short_effect = yes
			if = {
				limit = {
					NOT = { has_trait = lustful }
					number_of_personality_traits < 4
				}
				add_trait = lustful
			}
		}
	}
	create_character = {
		age = { 18 22 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		save_scope_as = concubine_3
		after_creation = {
			disease_immunity_short_effect = yes
			if = {
				limit = {
					NOT = { has_trait = lustful }
					number_of_personality_traits < 4
				}
				add_trait = lustful
			}
		}
	}
	scope:jochi_borjigin = {
		make_concubine = scope:concubine_1
		make_concubine = scope:concubine_2
		make_concubine = scope:concubine_3
	}
	# Chagatai
	create_character = {
		template = chagatai_borjigin_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:borte_onggirat
		father = $INVADER_CHAR$
		save_scope_as = chagatai_borjigin
		after_creation = {
			disease_immunity_long_effect = yes
		}
	}
	# Chagatai's spouse
	create_character = {
		age = { 13 15 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			create_betrothal = scope:chagatai_borjigin
		}
	}
	# Ögedei
	create_character = {
		template = ogedei_borjigin_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:borte_onggirat
		father = $INVADER_CHAR$
		save_scope_as = ogedei_borjigin
		after_creation = {
			disease_immunity_long_effect = yes
		}
	}
	# Ögedei's spouse
	create_character = {
		age = { 9 13 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			create_betrothal = scope:ogedei_borjigin
		}
	}
	# Tolui
	create_character = {
		template = tolui_borjigin_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:borte_onggirat
		father = $INVADER_CHAR$
		save_scope_as = tolui_borjigin
		after_creation = {
			disease_immunity_long_effect = yes
		}
	}
	# Tolui's spouse
	create_character = {
		age = { 2 7 }
		template = hi_random_spouse_character_template
		dynasty = none
		gender = female
		employer = $INVADER_CHAR$
		faith = $INVADER_CHAR$.faith
		culture = $INVADER_CHAR$.culture
		after_creation = {
			disease_immunity_short_effect = yes
			create_betrothal = scope:tolui_borjigin
		}
	}
	# Alakhai Bekhi
	create_character = {
		template = alakhai_borjigin_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:borte_onggirat
		father = $INVADER_CHAR$
		save_scope_as = alakhai_borjigin
		after_creation = {
			disease_immunity_long_effect = yes
		}
	}
	# Checheikhen
	create_character = {
		template = checheikhen_borjigin_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		mother = scope:borte_onggirat
		father = $INVADER_CHAR$
		save_scope_as = checheikhen_borjigin
		after_creation = {
			disease_immunity_long_effect = yes
		}
	}
	# Alaltun
	create_character = {
		template = alatun_borjigin_character_template
		dynasty = inherit
		employer = $INVADER_CHAR$
		father = $INVADER_CHAR$
		save_scope_as = alatun_borjigin
		after_creation = {
			disease_immunity_long_effect = yes
		}
	}

	### famous generals
	create_character = {
		template = hi_subutai_character_template
		dynasty = none
		employer = $INVADER_CHAR$
		save_scope_as = subutai
		after_creation = { disease_immunity_long_effect = yes }
	}

	### Spawn some captured Han siege engineers
	create_character = {
		gender_female_chance = historicinvasions_soldier_female_chance
		employer = $INVADER_CHAR$
		template = new_siege_engineer
		faith = faith:shangqing
		culture = culture:han
	}
	create_character = {
		gender_female_chance = historicinvasions_soldier_female_chance
		employer = $INVADER_CHAR$
		template = new_siege_engineer
		faith = faith:shangqing
		culture = culture:han
	}
	create_character = {
		gender_female_chance = historicinvasions_soldier_female_chance
		employer = $INVADER_CHAR$
		template = new_siege_engineer
		faith = faith:shangqing
		culture = culture:han
	}
	create_character = {
		gender_female_chance = historicinvasions_soldier_female_chance
		employer = $INVADER_CHAR$
		template = new_siege_engineer
		faith = faith:shangqing
		culture = culture:han
	}
}

# Make sure invader has troops
spawn_borjigin_troops_effect = {
	if = {
		limit = { has_character_flag = is_first_invader_flag }
		spawn_borjigin_army_effect = yes
		spawn_borjigin_army_effect = yes
		spawn_borjigin_army_effect = yes
	}
	spawn_borjigin_army_effect = yes
	spawn_borjigin_army_effect = yes
	spawn_borjigin_army_effect = yes
	if = {
		limit = { game_start_date < 1000.1.1 }
		spawn_borjigin_army_effect = yes
	}
}
spawn_borjigin_army_effect = {
	spawn_army = {
		name = borjigin_event_troops
		location = capital_province
		uses_supply = no
		inheritable = no
		
		levies = 250
		men_at_arms = {
			type = armored_horsemen
			stacks = 12
		}
		men_at_arms = {
			type = light_horsemen
			stacks = 20
		}
		men_at_arms = {
			type = horse_archers
			stacks = 24
		}
		men_at_arms = {
			type = horse_archers
			stacks = 24
		}
		# siege
		men_at_arms = {
			type = bombard
			stacks = 13
		}
		men_at_arms = {
			type = trebuchet
			stacks = 7
		}
	}
}

borjigin_splinter_mongol_empire_effect = {
	scope:story.story_owner = {
		save_scope_as = old_emperor

		every_held_title = { # Clean up excess kingdoms
			limit = {
				OR = {
					tier = tier_empire
					tier = tier_kingdom
					tier = tier_duchy
				}
				NOT = { this = scope:story.var:invader_title_var }
			}
			scope:old_emperor = {
				destroy_title = prev
			}
		}

		every_character_war = {
			limit = { primary_attacker = scope:old_emperor }
			end_war = white_peace
		}
	}

	set_global_variable = { # base game variable
		name = mongol_empire_was_broken_up
		value = yes
	}

	### pick characters for successor states
	scope:old_emperor = {
		dynasty = {
			every_dynasty_member = { # Every potential khandidate
				limit = {
					NOT = { this = scope:old_emperor }
					character_gender_can_inherit_from_trigger = { CHARACTER = scope:old_emperor }
					is_alive = yes
				}
				add_to_list = mongol_heir_candidates_list
			}
		}
	}

	ordered_in_list = {
		limit = { NOT = { is_in_list = selected_mongol_heirs_list } }
		list = mongol_heir_candidates_list
		order_by = historicinvasions_mongol_breakup_succession_score

		max = 4
		check_range_bounds = no

		#debug_log = "Mongol succession list found:"
		#debug_log_scopes = yes

		add_to_list = selected_mongol_heirs_list
	}
	if = {
		limit = {
			list_size = {
				name = selected_mongol_heirs_list
				value < 4
			}
		}
		scope:old_emperor.dynasty = {
			random_dynasty_member = {
				father = { save_scope_as = fake_father }
			}
		}
		debug_log = "list too small"
		# then spawn more heirs
		while = {
			limit = {
				list_size = {
					name = selected_mongol_heirs_list
					value < 8 # will stop at exactly this list size value; create more than merely enough to fish for better characters
				}
			}
			create_character = {
				employer = scope:story.var:invader_title_var.holder
				template = new_warrior_character
				dynasty = inherit
				father = scope:fake_father
				gender_female_chance = 50
				after_creation = { add_to_list = selected_mongol_heirs_list }
			}
		}
	}
	# mark the heirs
	ordered_in_list = {
		list = selected_mongol_heirs_list
		order_by = historicinvasions_mongol_breakup_succession_score
		position = 0

		save_scope_as = yuan_heir
	}
	ordered_in_list = {
		list = selected_mongol_heirs_list
		order_by = historicinvasions_mongol_breakup_succession_score
		position = 1

		save_scope_as = golden_horde_heir
	}
	ordered_in_list = {
		list = selected_mongol_heirs_list
		order_by = historicinvasions_mongol_breakup_succession_score
		position = 2

		save_scope_as = chagatai_heir
	}
	ordered_in_list = {
		list = selected_mongol_heirs_list
		order_by = historicinvasions_mongol_breakup_succession_score
		position = 3

		save_scope_as = ilkhanate_heir
	}

	### grant a duchy within a specified region to each heir
	give_mongol_heir_land_effect = {
		MONGOL_REGION = special_borjigin_conquest_region_yuan
		STARTING_TIER = duchy
		MONGOL_HEIR = scope:yuan_heir
	}
	give_mongol_heir_land_effect = {
		MONGOL_REGION = special_borjigin_conquest_region_golden_horde_de_jure
		STARTING_TIER = duchy
		MONGOL_HEIR = scope:golden_horde_heir
	}
	give_mongol_heir_land_effect = {
		MONGOL_REGION = special_borjigin_conquest_region_chagatai
		STARTING_TIER = duchy
		MONGOL_HEIR = scope:chagatai_heir
	}
	give_mongol_heir_land_effect = {
		MONGOL_REGION = special_borjigin_conquest_region_ilkhanate_de_jure
		STARTING_TIER = duchy
		MONGOL_HEIR = scope:ilkhanate_heir
	}

	### unland characters for successor states
	create_title_and_vassal_change = {
		type = granted
		save_scope_as = mongol_change
		add_claim_on_loss = yes
	}

	### transfer personally held titles to appropriate successor state
		# heir of old Khagan will inherit every county after the breakup effect and thus bypass all the following vassalage and transfer checks
		# if they were already landed, they will remain with the successor state their original capital was located in
		# if they were unlanded, they would simply pop out of the realm
		# we can't simply transfer all titles of the old Khagan to his player_heir because that would lead to a game over if the Khagan was player controlled
	# clean up counties held by old Khagan beforehand
	scope:story.story_owner = {
		every_held_title = {
			limit = {
				tier = tier_county
				NOR = {
					empire = scope:story.story_owner.primary_title
					this = holder.capital_county
				}
			}
			add_to_list = seceding_counties_list
		}
	}
	# unland regular heir
	scope:story.story_owner.player_heir = {
		if = {
			limit = {
				is_ruler = yes
				is_landed = yes
			}
		}
		every_held_title = {
			limit = { tier > tier_kingdom }
			scope:story.story_owner.player_heir = { destroy_title = prev }
		}
		every_held_title = {
			limit = { tier = tier_county }
			add_to_list = seceding_counties_list
		}
	}
	# the following procedure will only work if the Khagan holds at least two counties
	# granting the heir a county within the Khagan's primary title will work as well:
	scope:story.story_owner = {
		if = {
			limit = {
				always = yes
				# any_held_title = {
				# 	count < 2
				# 	tier = tier_county
				# }
			}
			create_title_and_vassal_change = {
				type = revoked
				save_scope_as = mongol_preparation_change
				add_claim_on_loss = yes
			}
			random_realm_county = {
				limit = {
					empire = scope:story.story_owner.primary_title
					holder = { is_ai = yes }
					NOT = { this = holder.capital_county }
				}
				change_title_holder = {
					holder = scope:story.story_owner.player_heir
					change = scope:mongol_preparation_change
				}
				save_scope_as = new_player_heir_capital
			}
			resolve_title_and_vassal_change = scope:mongol_preparation_change
			scope:story.story_owner.player_heir = {
				set_realm_capital = scope:new_player_heir_capital
			}
		}
	}
	# finally, this is what actually enables the script to vassalize the player heir of the dead Khagan:
	scope:story.story_owner = {
		random_held_title = {
			limit = {
				tier = tier_county
				empire = scope:story.story_owner.primary_title
			}
			change_title_holder = {
				holder = scope:story.story_owner.player_heir
				change = scope:mongol_change
			}
		}
	}

	mongol_heirs_mark_wrong_counties_effect = {
		MAIN_MONGOL_REGION = special_borjigin_conquest_region_yuan
		LOSING_MONGOL_HEIR = scope:yuan_heir
	}
	mongol_heirs_mark_wrong_counties_effect = {
		MAIN_MONGOL_REGION = special_borjigin_conquest_region_golden_horde
		LOSING_MONGOL_HEIR = scope:golden_horde_heir
	}
	mongol_heirs_mark_wrong_counties_effect = {
		MAIN_MONGOL_REGION = special_borjigin_conquest_region_chagatai
		LOSING_MONGOL_HEIR = scope:chagatai_heir
	}
	mongol_heirs_mark_wrong_counties_effect = {
		MAIN_MONGOL_REGION = special_borjigin_conquest_region_ilkhanate
		LOSING_MONGOL_HEIR = scope:ilkhanate_heir
	}
	mongol_heirs_transfer_wrong_counties_effect = yes

	### grant appropriate empires to characters
	title:e_mongolia = { copy_title_history = scope:story.var:invader_title_var }
	title:e_mongolia = {
		change_title_holder = {
			holder = scope:yuan_heir
			change = scope:mongol_change
		}
	}
	title:e_tibet = {
		if = {
			limit = {
				is_title_created = no
				roa_is_active = no
			}
			change_title_holder = {
				holder = scope:yuan_heir
				change = scope:mongol_change
			}
		}
	}
	title:e_golden_horde = {
		change_title_holder = {
			holder = scope:golden_horde_heir
			change = scope:mongol_change
		}
	}
	title:e_chagatai = {
		change_title_holder = {
			holder = scope:chagatai_heir
			change = scope:mongol_change
		}
	}
	title:e_ilkhanate = {
		change_title_holder = {
			holder = scope:ilkhanate_heir
			change = scope:mongol_change
		}
	}

	resolve_title_and_vassal_change = scope:mongol_change

	### colors
	title:e_chagatai = { set_color_from_title = title:c_schaumberg } # make it more grey because the White Horde will spawn next to it later on

	### transfer vassals to other empires
	# based on capital county, then based on any sub realm county
	$INVADER_CHAR$ = {
		# yuan
		every_vassal_or_below = {
			limit = {
				highest_held_title_tier >= tier_county
				capital_province = { geographical_region = special_borjigin_conquest_region_yuan }
				#NOT = { this = scope:story.story_owner.player_heir }
			}
			add_to_list = yuan_vassals_list
		}
		# golden horde
		every_vassal_or_below = {
			limit = {
				highest_held_title_tier >= tier_county
				capital_province = { geographical_region = special_borjigin_conquest_region_golden_horde }
				#NOT = { this = scope:story.story_owner.player_heir }
			}
			add_to_list = golden_horde_vassals_list
		}
		# chagatai
		every_vassal_or_below = {
			limit = {
				highest_held_title_tier >= tier_county
				capital_province = { geographical_region = special_borjigin_conquest_region_chagatai }
				#NOT = { this = scope:story.story_owner.player_heir }
			}
			add_to_list = chagatai_vassals_list
		}
		# ilkhanate
		every_vassal_or_below = {
			limit = {
				highest_held_title_tier >= tier_county
				capital_province = { geographical_region = special_borjigin_conquest_region_ilkhanate }
				#NOT = { this = scope:story.story_owner.player_heir }
			}
			add_to_list = ilkhanate_vassals_list
		}
		# player heir of old Khagan
		
		# independence
		every_vassal_or_below = {
			limit = {
				highest_held_title_tier >= tier_county
				NOR = {
					is_in_list = yuan_vassals_list
					is_in_list = golden_horde_vassals_list
					is_in_list = chagatai_vassals_list
					is_in_list = ilkhanate_vassals_list
				}
			}
			add_to_list = breakaway_vassals_list
		}
	}

	title:e_mongolia.holder = { set_primary_title_to = title:e_mongolia }
	title:e_golden_horde.holder = { set_primary_title_to = title:e_golden_horde }
	title:e_chagatai.holder = { set_primary_title_to = title:e_chagatai }
	title:e_ilkhanate.holder = { set_primary_title_to = title:e_ilkhanate }

	# ### mark local warlords for transfer; otherwise they would stay independent
	# # yuan
	# every_in_list = {
	# 	list = local_warlord_list
	# 	limit = {
	# 		highest_held_title_tier >= tier_county
	# 		capital_province = { geographical_region = special_borjigin_conquest_region_yuan }
	# 	}
	# 	add_to_list = yuan_vassals_list
	# 	remove_from_list = local_warlord_list
	# 	debug_log_scopes = yes
	# }
	# # golden horde
	# every_in_list = {
	# 	list = local_warlord_list
	# 	limit = {
	# 		highest_held_title_tier >= tier_county
	# 		capital_province = { geographical_region = special_borjigin_conquest_region_golden_horde }
	# 	}
	# 	add_to_list = golden_horde_vassals_list
	# 	remove_from_list = local_warlord_list
	# }
	# # chagatai
	# every_in_list = {
	# 	list = local_warlord_list
	# 	limit = {
	# 		highest_held_title_tier >= tier_county
	# 		capital_province = { geographical_region = special_borjigin_conquest_region_chagatai }
	# 	}
	# 	add_to_list = chagatai_vassals_list
	# 	remove_from_list = local_warlord_list
	# }
	# # ilkhanate
	# every_in_list = {
	# 	list = local_warlord_list
	# 	limit = {
	# 		highest_held_title_tier >= tier_county
	# 		capital_province = { geographical_region = special_borjigin_conquest_region_ilkhanate }
	# 	}
	# 	add_to_list = ilkhanate_vassals_list
	# 	remove_from_list = local_warlord_list
	# }
	# # independence
	# every_in_list = {
	# 	list = local_warlord_list
	# 	limit = {
	# 		highest_held_title_tier >= tier_county
	# 		NOR = {
	# 			is_in_list = yuan_vassals_list
	# 			is_in_list = golden_horde_vassals_list
	# 			is_in_list = chagatai_vassals_list
	# 			is_in_list = ilkhanate_vassals_list
	# 		}
	# 	}
	# 	add_to_list = breakaway_vassals_list
	# 	remove_from_list = local_warlord_list
	# }

	##### VASSAL TRANSFER #####
	create_title_and_vassal_change = {
		type = swear_fealty
		save_scope_as = mongol_change_vassalge
	}
	every_in_list = {
		list = yuan_vassals_list
		limit = {
			NOT = { top_liege = title:e_mongolia.holder }
			highest_held_title_tier < tier_empire
		}
		change_liege = {
			liege = title:e_mongolia.holder
			change = scope:mongol_change_vassalge
		}
	}
	every_in_list = {
		list = golden_horde_vassals_list
		limit = {
			NOT = { top_liege = title:e_golden_horde.holder }
			highest_held_title_tier < tier_empire
		}
		change_liege = {
			liege = title:e_golden_horde.holder
			change = scope:mongol_change_vassalge
		}
	}
	every_in_list = {
		list = chagatai_vassals_list
		limit = {
			NOT = { top_liege = title:e_chagatai.holder }
			highest_held_title_tier < tier_empire
		}
		change_liege = {
			liege = title:e_chagatai.holder
			change = scope:mongol_change_vassalge
		}
	}
	every_in_list = {
		list = ilkhanate_vassals_list
		limit = {
			NOT = { top_liege = title:e_ilkhanate.holder }
			highest_held_title_tier < tier_empire
		}
		change_liege = {
			liege = title:e_ilkhanate.holder
			change = scope:mongol_change_vassalge
		}
	}
	every_in_list = {
		list = breakaway_vassals_list
		becomes_independent = { change = scope:mongol_change_vassalge }
	}
	resolve_title_and_vassal_change = scope:mongol_change_vassalge

	### clean up de facto vassal structure since all vassals were transferred without their sub-vassals. AI will (slowly) clean this up anyway.
	title:e_mongolia.holder = { borjigin_clean_up_successor_de_facto_vassals_effect = yes }
	title:e_golden_horde.holder = { borjigin_clean_up_successor_de_facto_vassals_effect = yes }
	title:e_chagatai.holder = { borjigin_clean_up_successor_de_facto_vassals_effect = yes }
	title:e_ilkhanate.holder = { borjigin_clean_up_successor_de_facto_vassals_effect = yes }

	### mark exclaves for transfer
	# yuan
	title:e_mongolia.holder = {
		every_realm_county = {
			limit = {
				NOT = { title_province = { geographical_region = special_borjigin_conquest_region_yuan } }
			}
			add_to_list = county_cleanup_list
		}
	}
	# golden horde
	title:e_golden_horde.holder = {
		every_realm_county = {
			limit = {
				NOT = { title_province = { geographical_region = special_borjigin_conquest_region_golden_horde } }
			}
			add_to_list = county_cleanup_list
		}
	}
	# chagatai
	title:e_chagatai.holder = {
		every_realm_county = {
			limit = {
				NOT = { title_province = { geographical_region = special_borjigin_conquest_region_chagatai } }
			}
			add_to_list = county_cleanup_list
		}
	}
	# ilkhanate
	title:e_ilkhanate.holder = {
		every_realm_county = {
			limit = {
				NOT = { title_province = { geographical_region = special_borjigin_conquest_region_ilkhanate } }
			}
			add_to_list = county_cleanup_list
		}
	}
	### transfer exclaves
	create_title_and_vassal_change = {
		type = revoked
		save_scope_as = county_cleanup_change
		add_claim_on_loss = yes
	}
	# yuan
	every_in_list = {
		list = county_cleanup_list
		limit = { title_province = { geographical_region = special_borjigin_conquest_region_yuan } }
		change_title_holder = {
			holder = scope:yuan_heir
			change = scope:county_cleanup_change
		}
		remove_from_list = county_cleanup_list
	}
	# golden horde
	every_in_list = {
		list = county_cleanup_list
		limit = { title_province = { geographical_region = special_borjigin_conquest_region_golden_horde } }
		change_title_holder = {
			holder = scope:golden_horde_heir
			change = scope:county_cleanup_change
		}
		remove_from_list = county_cleanup_list
	}
	# chagatai
	every_in_list = {
		list = county_cleanup_list
		limit = { title_province = { geographical_region = special_borjigin_conquest_region_chagatai } }
		change_title_holder = {
			holder = scope:chagatai_heir
			change = scope:county_cleanup_change
		}
		remove_from_list = county_cleanup_list
	}
	# ilkhanate
	every_in_list = {
		list = county_cleanup_list
		limit = { title_province = { geographical_region = special_borjigin_conquest_region_ilkhanate } }
		change_title_holder = {
			holder = scope:ilkhanate_heir
			change = scope:county_cleanup_change
		}
		remove_from_list = county_cleanup_list
	}
	resolve_title_and_vassal_change = scope:county_cleanup_change

	### faith
	every_in_list = { # If tengri, switch to an organized faith in your new realm
		list = selected_mongol_heirs_list
		limit = {
			NOT = { this = scope:golden_horde_heir }
			primary_title.tier = tier_empire
			faith = { has_doctrine_parameter = unreformed }
			any_sub_realm_county = {
				NOR = {
					faith = { has_doctrine_parameter = unreformed }
					faith = faith:catholic
					faith = faith:orthodox
				}
			}
		}
		save_scope_as = faith_changer
		random_sub_realm_county = {
			limit = {
				NOR = {
					faith = { has_doctrine_parameter = unreformed }
					faith = faith:catholic
					faith = faith:orthodox
				}
			}
			weight = {
				base = 1
				modifier = {
					save_temporary_scope_as = county_faith_check
					add = historicinvasions_mongol_successor_faith_chance
				}
			}
			scope:faith_changer = {
				set_character_faith = prev.faith
			}
		}
	}

	### succession law
	every_in_list = {
		list = selected_mongol_heirs_list
		limit = {
			primary_title.tier = tier_empire
		}
		if = {
			limit = {
				can_have_single_heir_succession_law_trigger = yes
				NOT = { has_realm_law = single_heir_succession_law }
			}
			add_realm_law_skip_effects = single_heir_succession_law
		}
		else = { add_realm_law_skip_effects = high_partition_succession_law }
		# as a last resort, try to move away from confederate
		if = {
			limit = { has_realm_law = confederate_partition_succession_law }
			add_realm_law_skip_effects = partition_succession_law
		}
	}

	### transfer gold to all four heirs
	# by default, 100% goes to his player_heir
	scope:story.story_owner.player_heir = {
		pay_short_term_gold = {
			target = scope:yuan_heir
			gold = {
				value = scope:story.story_owner.gold
				multiply = 0.95
				multiply = 0.25
				min = 0
			}
		}
		pay_short_term_gold = {
			target = scope:golden_horde_heir
			gold = {
				value = scope:story.story_owner.gold
				multiply = 0.95
				multiply = 0.25
				min = 0
			}
		}
		pay_short_term_gold = {
			target = scope:chagatai_heir
			gold = {
				value = scope:story.story_owner.gold
				multiply = 0.95
				multiply = 0.25
				min = 0
			}
		}
		pay_short_term_gold = {
			target = scope:ilkhanate_heir
			gold = {
				value = scope:story.story_owner.gold
				multiply = 0.95
				multiply = 0.25
				min = 0
			}
		}
	}

	### destroy other held empires

	### de jure changes; de jure leftovers might be cleaned up within follow up stories
	# revert to Mongolia (Yuan)
	scope:story.var:invader_title_var = {
		every_in_de_jure_hierarchy = {
			limit = { tier = tier_kingdom }
			set_de_jure_liege_title = title:e_mongolia
		}
	}
	# golden horde
	if = {
		limit = { title:e_golden_horde = { is_title_created = yes } }
		every_county_in_region = {
			region = special_borjigin_conquest_region_golden_horde_de_jure
			kingdom = { add_to_list = golden_horde_de_jure_potential_list }
		}
		every_in_list = {
			list = golden_horde_de_jure_potential_list
			limit = {
				any_in_de_jure_hierarchy = {
					filter = { tier = tier_county }
					continue = { tier > tier_county }
					OR = {
						holder = title:e_golden_horde.holder
						holder = { target_is_liege_or_above = title:e_golden_horde.holder }
					}
					percent > 0.7
				}
				NOT = { de_jure_liege = title:e_golden_horde }
			}
			set_de_jure_liege_title = title:e_golden_horde
		}
	}
	# chagatai
	if = {
		limit = { title:e_chagatai = { is_title_created = yes } }
		every_county_in_region = {
			region = special_borjigin_conquest_region_chagatai
			kingdom = { add_to_list = chagatai_de_jure_potential_list }
		}
		every_in_list = {
			list = chagatai_de_jure_potential_list
			limit = {
				any_in_de_jure_hierarchy = {
					filter = { tier = tier_county }
					continue = { tier > tier_county }
					OR = {
						holder = title:e_chagatai.holder
						holder = { target_is_liege_or_above = title:e_chagatai.holder }
					}
					percent > 0.7
				}
				NOT = { de_jure_liege = title:e_chagatai }
			}
			set_de_jure_liege_title = title:e_chagatai
		}
	}
	# ilkhanate
	if = {
		limit = { title:e_ilkhanate = { is_title_created = yes } }
		every_county_in_region = {
			region = special_borjigin_conquest_region_ilkhanate_de_jure
			kingdom = { add_to_list = ilkhanate_de_jure_potential_list }
		}
		every_in_list = {
			list = ilkhanate_de_jure_potential_list
			limit = {
				any_in_de_jure_hierarchy = {
					filter = { tier = tier_county }
					continue = { tier > tier_county }
					OR = {
						holder = title:e_ilkhanate.holder
						holder = { target_is_liege_or_above = title:e_ilkhanate.holder }
					}
					percent > 0.7
				}
				NOT = { de_jure_liege = title:e_ilkhanate }
			}
			set_de_jure_liege_title = title:e_ilkhanate
		}
	}

	### destroy mongol empire
	scope:story.var:invader_title_var.holder = { destroy_title = scope:story.var:invader_title_var } # error: scoped object Null?!

	### misc, actions
	every_in_list = {
		list = selected_mongol_heirs_list
		limit = {
			is_ruler = yes
			is_landed = yes
			exists = dynasty
			primary_title.tier = tier_empire
		}
		# gold, prestige, piety
		if = {
			limit = { gold < 750 }
			add_gold = 500
		}
		if = {
			limit = { prestige < 2500 }
			add_prestige = 2250
		}
		if = {
			limit = { piety < 500 }
			add_piety = 250
		}
		# family
		trigger_event = game_rule.1001
		# cadet branch
		create_cadet_branch = yes
		# troops?
	}
	# set up cadet branch infos
	every_in_list = {
		list = selected_mongol_heirs_list
		limit = {
			is_ruler = yes
			is_landed = yes
			exists = dynasty
			primary_title.tier = tier_empire
			NOR = { # prevent the main house from being changed
				house = father.house
				house = mother.house
			}
		}
		house = {
			set_coa = prev.primary_title
		}
	}
	### arrange truces
	scope:yuan_heir = {
		add_truce_both_ways = {
			character = scope:golden_horde_heir
			years = 10
			name = truce_mongol_partition
		}
		add_truce_both_ways = {
			character = scope:chagatai_heir
			years = 10
			name = truce_mongol_partition
		}
		add_truce_both_ways = {
			character = scope:ilkhanate_heir
			years = 10
			name = truce_mongol_partition
		}
	}
	scope:golden_horde_heir = {
		add_truce_both_ways = {
			character = scope:chagatai_heir
			years = 10
			name = truce_mongol_partition
		}
		add_truce_both_ways = {
			character = scope:ilkhanate_heir
			years = 10
			name = truce_mongol_partition
		}
	}
	scope:chagatai_heir = {
		add_truce_both_ways = {
			character = scope:ilkhanate_heir
			years = 10
			name = truce_mongol_partition
		}
	}

	### start follow-up stories
	# yuan for Rajas of Asia
	if = {
		limit = {
			exists = scope:yuan_heir
			scope:yuan_heir = {
				is_ruler = yes
				is_landed = yes
				exists = dynasty
				has_title = title:e_mongolia
			}
		}
		scope:yuan_heir = { borjigin_yuan_start_story_effect = yes } # effect is replaced if RoA is active
	}
	# golden horde
	if = {
		limit = {
			exists = scope:golden_horde_heir
			scope:golden_horde_heir = {
				is_ruler = yes
				is_landed = yes
				exists = dynasty
				has_title = title:e_golden_horde
			}
			NOT = { # is set in story
				is_target_in_global_variable_list = {
					name = historicinvasions_story_started
					target = flag:jochid_story_started
				}
			}
		}
		scope:golden_horde_heir = { create_story = story_jochid_invasion }
	}
	# chagatai
	if = {
		limit = {
			exists = scope:chagatai_heir
			scope:chagatai_heir = {
				is_ruler = yes
				is_landed = yes
				exists = dynasty
				has_title = title:e_chagatai
			}
		}
		scope:chagatai_heir = {
			add_character_modifier = first_chagatai_modifier
			add_character_flag = recent_nation_fracturing_faction_war # makes the AI unlikely to start dissolution factions
			add_character_flag = recent_independence_faction_war # makes the AI unlikely to start independence factions
			spawn_generic_successor_borjigin_troops_effect = yes
			apply_invader_government_type_effect = { INVADER_CHAR = scope:chagatai_heir }
		}
	}
	# ilkhanate
	if = {
		limit = {
			exists = scope:ilkhanate_heir
			scope:ilkhanate_heir = {
				is_ruler = yes
				is_landed = yes
				exists = dynasty
				has_title = title:e_ilkhanate
				NOT = { # is set in story
					is_target_in_global_variable_list = {
						name = historicinvasions_story_started
						target = flag:hulagu_story_started
					}
				}
			}
		}
		scope:ilkhanate_heir = { create_story = story_hulagu_invasion }
	}

	### notification event
	every_player = {
		trigger_event = {
			id = borjigin_invasion.1002
			days = 1
		}
	}
}

give_mongol_heir_land_effect = {
	# it's likely that the chosen heirs don't hold any land or only hold land outside of their assigned successor state (which they will lose later on)
	if = {
		# first off we will check whether the Mongol Empire ever crossed into this region
		limit = {
			exists = $MONGOL_HEIR$
			scope:story.var:invader_title_var = {
				any_in_de_facto_hierarchy = {
					tier = tier_county
					title_province = { geographical_region = $MONGOL_REGION$ }
				}
			}
		}
		$MONGOL_HEIR$ = {
			# the mongol successors will only steal land from AI controlled characters who were subjugated by the Khagan
			if = {
				# are there any AI-held counties within the region?
				limit = {
					any_county_in_region = {
						region = $MONGOL_REGION$
						count > 0
						holder = { is_ai = yes }
						scope:story.var:invader_title_var = { is_de_facto_liege_or_above_target = this }
					}
				}
				# pick out a county as starting point and scope upwards to its duchy
				random_county_in_region = { # bigger duchies are more likely to be picked
					# try to only pick duchies with only AI-held counties
					limit = {
						$STARTING_TIER$ = { # usually a duchy; can be any other tier
							any_in_de_jure_hierarchy = {
								tier = tier_county
								count = all
								holder = { is_ai = yes }
								scope:story.var:invader_title_var = { is_de_facto_liege_or_above_target = this }
							}
						}
					}
					# alternatively, pick any AI-held county
					alternative_limit = {
						holder = { is_ai = yes }
						scope:story.var:invader_title_var = { is_de_facto_liege_or_above_target = this }
					}
					region = $MONGOL_REGION$
					$STARTING_TIER$ = { save_scope_as = starting_landed_title } # usually a duchy; can be any other tier
				}
				# then scope downwards to every de jure AI-held county
				scope:starting_landed_title = {
					every_in_de_jure_hierarchy = {
						limit = {
							tier = tier_county
							holder = { is_ai = yes }
							scope:story.var:invader_title_var = { is_de_facto_liege_or_above_target = this }
						}
						add_to_list = starting_titles_list
					}
				}
			}
			else = { # fallback; should theoretically never trigger due to check at the beginning
				#debug_log = "story used fallback land grant effect"
				#debug_log_date = yes
				#debug_log_scopes = yes
				
				random_county_in_region = {
					region = $MONGOL_REGION$
					add_to_list = starting_titles_list
				}
			}
	
			# hand out titles
			create_title_and_vassal_change = {
				type = revoked
				save_scope_as = title_change
				add_claim_on_loss = no
			}
			every_in_list = {
				list = starting_titles_list
				change_title_holder = {
					holder = $MONGOL_HEIR$
					change = scope:title_change
				}
			}
			# scope:starting_landed_title = {
			# 	change_title_holder = {
			# 		holder = $MONGOL_HEIR$
			# 		change = scope:title_change
			# 	}
			# }
			resolve_title_and_vassal_change = scope:title_change

			# move the capital into the assigned successor state; they may lose any previously held titles later on
			random_in_list = {
				list = starting_titles_list
				save_scope_as = new_capital
			}
			set_realm_capital = scope:new_capital
	
			# raise control
			every_in_list = {
				list = starting_titles_list
				change_county_control = 100
				remove_from_list = starting_titles_list
			}
			every_realm_province = {
				refill_levy = yes
				refill_garrison = yes
			}
		}
	}
	# fallback?
	else = {}
}

mongol_heirs_mark_wrong_counties_effect = {
	### let go of every held title outside of the specified region
	if = {
		limit = { exists = $LOSING_MONGOL_HEIR$ }
		$LOSING_MONGOL_HEIR$ = {
			every_held_title = {
				limit = {
					tier = tier_county
					NOT = { title_province = { geographical_region = $MAIN_MONGOL_REGION$ } }
				}
				add_to_list = seceding_counties_list
			}
		}
	}
}

mongol_heirs_transfer_wrong_counties_effect = {
	# yuan
	if = {
		limit = { exists = scope:yuan_heir }
		every_in_list = {
			list = seceding_counties_list
			limit = { title_province = { geographical_region = special_borjigin_conquest_region_yuan } }
			change_title_holder = {
				holder = scope:yuan_heir
				change = scope:mongol_change
			}
			remove_from_list = seceding_counties_list
		}
	}
	# golden horde
	if = {
		limit = { exists = scope:golden_horde_heir }
		every_in_list = {
			list = seceding_counties_list
			limit = { title_province = { geographical_region = special_borjigin_conquest_region_golden_horde } }
			change_title_holder = {
				holder = scope:golden_horde_heir
				change = scope:mongol_change
			}
			remove_from_list = seceding_counties_list
		}
	}
	# chagatai
	if = {
		limit = { exists = scope:chagatai_heir }
		every_in_list = {
			list = seceding_counties_list
			limit = { title_province = { geographical_region = special_borjigin_conquest_region_chagatai } }
			change_title_holder = {
				holder = scope:chagatai_heir
				change = scope:mongol_change
			}
			remove_from_list = seceding_counties_list
		}
	}
	# ilkhanate
	if = {
		limit = { exists = scope:ilkhanate_heir }
		every_in_list = {
			list = seceding_counties_list
			limit = { title_province = { geographical_region = special_borjigin_conquest_region_ilkhanate } }
			change_title_holder = {
				holder = scope:ilkhanate_heir
				change = scope:mongol_change
			}
			remove_from_list = seceding_counties_list
		}
	}
	# independence
	every_in_list = {
		list = seceding_counties_list
		duchy = { save_scope_as = seceding_duchy }
		create_character = {
			location = scope:seceding_duchy.title_capital_county.title_province
			template = hi_post_migration_local_warlord_template
			save_scope_as = local_warlord
			after_creation = { add_to_list = local_warlord_list }
		}
		change_title_holder = {
			holder = scope:local_warlord
			change = scope:mongol_change
		}
	}
	every_in_list = { # family
		list = local_warlord_list
		trigger_event = game_rule.1001
	}
}

# scope is empire holder character
borjigin_clean_up_successor_de_facto_vassals_effect = {
	save_scope_as = successor_emperor

	### counts under dukes
	if = {
		limit = {
			any_vassal = {
				count > 0
				highest_held_title_tier = tier_county
			}
			any_vassal = {
				count > 0
				highest_held_title_tier = tier_duchy
			}
		}
		# populate receiver list, one tier below successor_emperor
		every_vassal = {
			limit = {
				highest_held_title_tier = tier_duchy
			}
			add_to_list = vassal_receiver_list
		}
		while = {
			limit = {
				list_size = {
					name = vassal_receiver_list
					value > 0
				}
			}
			clear_saved_scope = receiver_vassal
			clear_saved_scope = change

			random_in_list = {
				list = vassal_receiver_list
				save_scope_as = receiver_vassal
			}

			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:successor_emperor = {
				every_vassal = {
					limit = {
						highest_held_title_tier > tier_barony
						highest_held_title_tier < scope:receiver_vassal.primary_title.tier
						save_temporary_scope_as = transferred_vassal # 'this' or 'prev' didn't work
						# is_rightful_liege_of_trigger = {
						# 	VASSAL = scope:transferred_vassal
						# 	LIEGE = scope:receiver_vassal
						# }
						scope:receiver_vassal = { is_rightful_liege_of = scope:transferred_vassal }
					}
					change_liege = {
						liege = scope:receiver_vassal
						change = scope:change
					}
				}
			}
			resolve_title_and_vassal_change = scope:change

			scope:receiver_vassal = { remove_from_list = vassal_receiver_list }
		}
		# empty list, just in case
		if = {
			limit = {
				list_size = {
					name = vassal_receiver_list
					value > 0
				}
			}
			every_in_list = {
				list = vassal_receiver_list
				remove_from_list = vassal_receiver_list
			}
		}
	}

	### dukes under kings
	if = {
		limit = {
			any_vassal = {
				count > 0
				highest_held_title_tier = tier_duchy
			}
			any_vassal = {
				count > 0
				highest_held_title_tier = tier_kingdom
			}
		}
		# populate receiver list, one tier below successor_emperor
		every_vassal = {
			limit = {
				highest_held_title_tier = tier_kingdom
			}
			add_to_list = vassal_receiver_list
		}
		while = {
			limit = {
				list_size = {
					name = vassal_receiver_list
					value > 0
				}
			}
			clear_saved_scope = receiver_vassal
			clear_saved_scope = change

			random_in_list = {
				list = vassal_receiver_list
				save_scope_as = receiver_vassal
			}

			create_title_and_vassal_change = {
				type = granted
				save_scope_as = change
				add_claim_on_loss = no
			}
			scope:successor_emperor = {
				every_vassal = {
					limit = {
						highest_held_title_tier > tier_barony
						highest_held_title_tier < scope:receiver_vassal.primary_title.tier
						save_temporary_scope_as = transferred_vassal # 'this' or 'prev' didn't work
						# is_rightful_liege_of_trigger = {
						# 	VASSAL = scope:transferred_vassal
						# 	LIEGE = scope:receiver_vassal
						# }
						scope:receiver_vassal = { is_rightful_liege_of = scope:transferred_vassal }
					}
					change_liege = {
						liege = scope:receiver_vassal
						change = scope:change
					}
				}
			}
			resolve_title_and_vassal_change = scope:change

			scope:receiver_vassal = { remove_from_list = vassal_receiver_list }
		}
		# empty list, just in case
		if = {
			limit = {
				list_size = {
					name = vassal_receiver_list
					value > 0
				}
			}
			every_in_list = {
				list = vassal_receiver_list
				remove_from_list = vassal_receiver_list
			}
		}
	}
}

# is replaced by the Rajas of Asia addon to start an actual story
borjigin_yuan_start_story_effect = {
	add_character_modifier = first_yuan_modifier
	add_character_flag = recent_nation_fracturing_faction_war # makes the AI unlikely to start dissolution factions
	add_character_flag = recent_independence_faction_war # makes the AI unlikely to start independence factions
	spawn_generic_successor_borjigin_troops_effect = yes
	apply_invader_government_type_effect = { INVADER_CHAR = scope:yuan_heir }
}

spawn_generic_successor_borjigin_troops_effect = {
	spawn_generic_successor_borjigin_army_effect = yes
}
spawn_generic_successor_borjigin_army_effect = {
	spawn_army = {
		name = borjigin_event_troops
		location = capital_province
		uses_supply = no
		inheritable = yes
		
		levies = 250
		men_at_arms = {
			type = armored_horsemen
			stacks = 5
		}
		men_at_arms = {
			type = light_horsemen
			stacks = 10
		}
		men_at_arms = {
			type = horse_archers
			stacks = 10
		}
		# siege
		men_at_arms = {
			type = bombard
			stacks = 5
		}
	}
}

# scope:defender
borjigin_defender_insulted_mongol_emperor_effect = {
	scope:county_to_raze = {
		duchy = {
			change_development_level = -5
			change_county_control = -100
		}
	}
	custom_tooltip = {
		text = borjigin_revenge_executed_mongol_envoys
		every_courtier_or_guest = {
			limit = { NOT = { is_primary_heir_of = scope:defender } }
			death = {
				death_reason = death_execution
				killer = scope:attacker
			}
		}
		death = {
			death_reason = death_execution
			killer = scope:attacker # executioner
		}
	}
}

marco_polo_create_artifacts_effect = {
	create_artifact_marco_polo_book_effect = { OWNER = this } # character artifact
}

borjigin_raze_baghdad_effect = {
	# raze House of Wisdom
	title:b_baghdad = {
		title_province = {
			remove_building = house_of_wisdom_01
		}
	}
	# remove development, control
	title:c_baghdad = {
		change_development_level = -3
		change_county_control = -50
		duchy = {
			change_development_level = -2
			change_county_control = -25
			every_in_de_jure_hierarchy = {
				limit = { tier = tier_county }
				add_county_modifier = {
					modifier = historicinvasions_county_razed_modifier
					years = 25
				}
			}
		}
		kingdom = {
			change_county_control = -25
		}
		# localization
		save_scope_as = razed_county
	}
	# reward Khagan
	title:e_mongol_empire.holder = {
		save_scope_as = invader
		# development
		capital_county = {
			change_development_level = 1
			duchy = { change_development_level = 1 }
			kingdom = { change_development_level = 1 }
		}
		# gold
		add_gold = 3000 # cost to rebuild House of Wisdom
		# prestige
		add_prestige = 750
		# dread
		add_dread = 25
	}
	# player notification
	every_player = {
		limit = {
			NOT = { this = scope:invader }
		}
		trigger_event = borjigin_invasion.1010
	}
}