namespace = ghurid_invasion

### Spawn invader with the associated story...
ghurid_invasion.0001 = {
	scope = none
	hidden = yes
	
	trigger = {
		exists = title:e_ghurid # update compatibility - new titles in old saves return false
		any_county_in_region = {
			region = special_ghurid_conquest_region_start
			count > 0
			holder = { is_ai = yes }
		}
	}

	on_trigger_fail = {
		debug_log = "ghurid story has failed to trigger; trying again next year"
		debug_log_date = yes
	}

	immediate = {
		debug_log = "ghurid story owner has appeared"
		debug_log_date = yes
		
		character:extra_ghurids_1 = { save_scope_as = shansab_ghurid }

		scope:shansab_ghurid.dynasty = {
			# pick an already existing dynasty member
			ordered_dynasty_member = {
				limit = {
					is_landed = yes
					highest_held_title_tier > tier_barony
					OR = {
						capital_county = { title_province = { geographical_region = special_ghurid_conquest_region_start } }
						capital_county = { title_province = { geographical_region = special_ghurid_conquest_region_total } }
					}
					is_independent_ruler = yes
					is_adult = yes
					is_healthy = yes
					is_imprisoned = no
					historicinvasions_player_may_become_invader_trigger = yes
					historicinvasions_common_existing_character_restrictions_trigger = yes
				}
				alternative_limit = {
					is_landed = yes
					highest_held_title_tier > tier_barony
					OR = {
						capital_county = { title_province = { geographical_region = special_ghurid_conquest_region_start } }
						capital_county = { title_province = { geographical_region = special_ghurid_conquest_region_total } }
					}
					is_adult = yes
					is_healthy = yes
					is_imprisoned = no
					historicinvasions_player_may_become_invader_trigger = yes
					historicinvasions_common_existing_character_restrictions_trigger = yes
				}
				order_by = realm_size
				save_scope_as = invader
			}
		}
		
		# only spawns a new character if scope 'invader name' is not set
		spawn_ghurid_invader_effect = {
			INVADER_DYNN = ghurid
		}

		# start story
		scope:invader = {
			create_story = story_ghurid_invasion
		}
	}
}

# Event for handling new army spawning on succession
ghurid_invasion.0100 = {
	hidden = yes
	immediate = {
		spawn_ghurid_troops_effect = yes
	}
}

# Event for declaring the very first war; values like current_ / max_military_strength aren't immediately filled with a value and return 0 instead
ghurid_invasion.0200 = {
	hidden = yes
	trigger = { is_ai = yes } # don't force a player into a war
	immediate = {
		war_target_evaluation_and_declaration_effect = {
			INVADER_DYNN = ghurid
			INVADER_CHAR = scope:story.story_owner
			INVADER_REGION = total
			INVADER_TARGET_TITLE_TIER = kingdom
			INVADER_RANGE = neighboring
			INVADER_LIEGE_RESTRICTIONS = ""
		}
	}
}

##################
# Notification Events
# 1000-1999
##################

### The invader has appeared! Would you like to play as them?
ghurid_invasion.1001 = { # only players see this
	type = character_event
	title = ghurid_invasion.1001.t
	desc = ghurid_invasion.1001.desc
	
	theme = hi_theme_mountains

	left_portrait = {
		character = scope:invader
		animation = personality_bold
	}

	trigger = { hi_show_invader_notification_event_trigger = yes }
	
	option = { name = ghurid_invasion.1001.a }

	option = { # play as the newly spawned invader
		name = ghurid_invasion.1001.b
		trigger = { hi_play_as_invader_event_option_trigger = yes }
		add_internal_flag = dangerous
		scope:invader = {
			set_variable = {
				name = historicinvasions_previous_ruler_var
				value = root
				months = 1
			}
		}
		set_player_character = scope:invader
	}
}